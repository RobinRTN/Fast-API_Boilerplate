version: '3.9'

services:
  frontend:
    container_name: frontend
    image: robinrtn/frontend:latest  # Using Docker Hub image
    networks:
      - internal_network

  backend:
    container_name: backend
    image: robinrtn/backend:latest  # Using Docker Hub image
    networks:
      - internal_network
    environment:
      FLASK_ENV: ${FLASK_ENV}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      SQLALCHEMY_DATABASE_URI: ${SQLALCHEMY_DATABASE_URI}
      PYTHONPATH: /app
    depends_on:
      - db
    volumes:
      - ./backend/migrations:/app/migrations
      - ./backend/seeds:/app/seeds

  db:
    container_name: db
    image: robinrtn/db:latest  # Using Docker Hub image
    networks:
      - internal_network
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data  # Named volume for persistent data

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "4430:4430"  # Expose HTTPS
      - "8080:8080"  # Optional: Redirect HTTP to HTTPS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs:/etc/nginx/ssl:ro  # Mount SSL certificates
    depends_on:
      - backend
      - frontend
    networks:
      - internal_network

  scraper:
    container_name: scraper
    image: robinrtn/scraper:latest  # Using Docker Hub image
    depends_on:
      - db
      - backend
    networks:
      - internal_network

networks:
  internal_network:
    driver: bridge

volumes:
  db_data:
